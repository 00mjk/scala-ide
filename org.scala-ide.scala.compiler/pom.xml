<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.scala-ide</groupId>
    <artifactId>org.scala-ide.build-toolchain</artifactId>
    <version>2.1.0-SNAPSHOT</version>
    <relativePath>../org.scala-ide.build-toolchain/pom.xml</relativePath>
  </parent>
  <artifactId>org.scala-ide.scala.compiler</artifactId>
  <packaging>bundle</packaging>

<!--  Needed for memorytest
  <properties>
    <test.workspace.dir>../org.scala-ide.sdt.core.tests/test-workspace</test.workspace.dir>
  </properties> -->

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-compiler</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
<!--  Needed for memorytest
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${test.workspace.dir}/scala-compiler</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <!-- TODO check if still required -->
          <!-- We need to unpack scala-compiler.jar to repackage it without
               its manifest file and also access the content of compiler.properties.
               We need to get rid of the manifest file because otherwise tycho is referencing
               the scala-compiler.jar instead of the org.scala-ide.scala.compiler jar as being
               the bundle, and it creates problem when running the tests -->
          <execution>
            <id>unpack</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.scala-lang</groupId>
                  <artifactId>scala-compiler</artifactId>
                  <outputDirectory>${project.build.directory}/compiler</outputDirectory>
                </artifactItem>
<!--  Needed for memorytest
                <artifactItem>
                  <groupId>${scala.compiler.groupid}</groupId>
                  <artifactId>scala-compiler</artifactId>
                  <version>${scala.compiler.version}</version>
                  <classifier>sources</classifier>
                  <outputDirectory>${test.workspace.dir}/scala-compiler/src</outputDirectory>
                  <includes>scala/</includes>
                </artifactItem>-->
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <!-- add the source jar, to be able to attach the source to the Scala container. And the continuation plug-in -->
            <id>copy</id>
            <phase>compile</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.scala-lang</groupId>
                  <artifactId>scala-compiler</artifactId>
                  <classifier>sources</classifier>
                  <type>jar</type>
                  <destFileName>scala-compiler-src.jar</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.scala-lang.plugins</groupId>
                  <artifactId>continuations</artifactId>
                  <type>jar</type>
                </artifactItem>
              </artifactItems>
              <stripVersion>true</stripVersion>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <!-- Repackaging the scala-compiler.jar, without the original manifest data.
               See earlier comment. -->
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                 <jar destfile="${project.build.directory}/lib/scala-compiler.jar" basedir="${project.build.directory}/compiler"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- extract the osgi.version.number value from compiler.properties -->
        <groupId>org.kuali.maven.plugins</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <locations>
                <location>${project.build.directory}/compiler/compiler.properties</location>
              </locations>
            </configuration>
          </execution>
        </executions>
      </plugin>

<!--  Needed for memorytest
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration> -->
              <!-- copy the .classpath and .project files to the scala-compiler project -->
<!--              <outputDirectory>${test.workspace.dir}/scala-compiler/</outputDirectory>
              <resources>          
                <resource>
                  <directory>resources/scala-compiler</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>              
            </configuration>            
          </execution>
        </executions>
      </plugin>-->

      <plugin>
        <!-- generate the bundle -->
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>org.scala-ide.scala.compiler</Bundle-SymbolicName>
            <Bundle-Name>Scala Compiler for Eclipse</Bundle-Name>
            <Bundle-Version>${osgi.version.number}</Bundle-Version>
            <Bundle-Vendor>scala-ide.org</Bundle-Vendor>
            <Embed-Dependency>*;scope=compile|runtime;inline=false</Embed-Dependency>
            <_exportcontents>scala.reflect.internal.*;version=${osgi.version.number},
            scala.reflect.api.*;version=${osgi.version.number},
            scala.reflect.runtime.*;version=${osgi.version.number},
            scala.reflect.std.*;version=${osgi.version.number},
            scala.reflect.internal.transform.*;version=${osgi.version.number},
            scala.tools.*;version=${osgi.version.number},
            ch.epfl.lamp.*;version=${osgi.version.number}</_exportcontents>
            <Embed-Directory>lib</Embed-Directory>
            <Embed-StripVersion>true</Embed-StripVersion>
            <Include-Resource>lib=${project.build.directory}/lib</Include-Resource>
            <Import-Package>!jline.*,!scala.tools.jline.*,!sun.misc,scala.reflect,*</Import-Package>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
